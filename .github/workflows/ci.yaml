name: Rust CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "**"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]
        feature: [default, debug, no-std]

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy
          override: true

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ matrix.rust }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ matrix.rust }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Install X11 dependencies (Linux)
        if: matrix.platform == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libx11-dev libxi-dev libgl1-mesa-dev libxrandr-dev libxinerama-dev libxcursor-dev

      - name: Install wasm32 target (if needed)
        if: matrix.feature == 'wasm'
        run: rustup target add wasm32-unknown-unknown

      - name: Build (No features)
        if: matrix.feature == 'default'
        run: cargo build

      - name: Build (Debug)
        if: matrix.feature == 'debug'
        run: cargo build --features debug

      - name: Build (No std)
        if: matrix.feature == 'no-std'
        run: cargo build --no-default-features

      - name: Build (WASM)
        if: matrix.feature == 'wasm'
        run: cargo build --target wasm32-unknown-unknown

      - name: Run tests
        if: matrix.platform != 'windows-latest'
        run: cargo test --features raylib-renderer

      - name: Run tests (Windows)
        if: matrix.platform == 'windows-latest'
        run: cargo test

      - name: Check Formatting
        if: matrix.platform == 'ubuntu-latest'
        run: cargo fmt --all -- --check

      - name: Run Clippy Checks
        if: matrix.platform == 'ubuntu-latest'
        run: cargo clippy -- -D warnings
