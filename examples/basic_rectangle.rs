use clay_layout::{
    color::Color,
    elements::{rectangle::Rectangle, CornerRadius},
    id::Id,
    layout::{sizing::Sizing, Layout},
    math::Dimensions,
    Clay,
};

fn main() {
    // Create the clay instance
    let clay = Clay::new(Dimensions::new(800., 600.));

    // Begin the layout
    clay.begin();

    // Adds a red rectangle with a corner radius of 5.
    // The Layout makes the rectangle have a width and height of 50.
    clay.with(
        [
            Layout::new()
                .width(Sizing::Fixed(50.))
                .height(Sizing::Fixed(50.))
                .end(),
            Rectangle::new()
                .color(Color::u_rgb(0xFF, 0x00, 0x00))
                .corner_radius(CornerRadius::All(5.))
                .end(Id::new("Red Rectangle")),
        ],
        |_| {},
    );

    // Return the list of render commands of your layout
    let render_commands = clay.end();

    for command in render_commands {
        println!("Id of the element: {}", command.id); // Note: Ids are in fact numbers generated by Clay
        println!("Bounding box: {:?}", command.bounding_box);
        println!("Type and config: {:?}", command.config);
    }
}
